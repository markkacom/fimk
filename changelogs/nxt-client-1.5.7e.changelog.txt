This is an experimental release. It is a required update for all testnet nodes,
but is also possible to run on main net.

Added WebSockets support in the peer to peer networking. When connecting to
peers that do not support WebSockets, HTTP is still used. WebSockets can be
disabled by setting nxt.useWebSockets to false (default is enabled).

Implemented parallel blockchain download. After Constants.PHASING_BLOCK (not
yet set on main net), blocks and transactions data will be requested from
multiple peers in parallel, in batches of 36 blocks (when more than 36 blocks
need to be downloaded), instead of downloading up to 720 blocks from the
single blockchain feeder peer. This is expected to reduce the time for full
blockchain download, once most nodes upgrade to support the parallel download
protocol.

Added file upload using multipart form requests to the UploadTaggedData,
ExtendTaggedData and VerifyTaggedData APIs. Added upload file button to the
corresponding forms on the /test page.

Added DownloadTaggedData API, to download tagged data as a file.

Added optional includeData boolean parameter to all GetTaggedData APIs, default
true, to allow omitting the actual data from the result for saving bandwith,
since it can now be retrieved separately using the DownloadTaggedData API.

Improved search by tags. Improved validation of tagged data.

Added includeEffectiveBalance to getAccount and getBalance API, default true.
If false, effective balance and guaranteed balance are not included in the
response, which should improve performance for these APIs.

Added HexConvert utility API.

Improved GetConstants JSON to include an alternative transaction type JSON
representation.

Peers in the nxt.wellKnownPeers list are always kept connected, regardless of
the number of connected public peers or the total number of know peers.

Added GetInboundPeers API, to return all peers that have sent a request to this
peer in the last 30 min.

Added inbound, inboundWebSocket, and outboundWebSocket boolean fields to the
Peer JSON returned by the getPeer and getPeers APIs, to show the inbound status
of each peer and whether it has established an inbound or outbound websocket
connections to this node.

Limit the total number of inbound or outbound connections, using the properties
nxt.maxNumberOfInboundConnections and nxt.maxNumberOfOutboundConnections,
defaults 250 and 50 respectively. The nxt.maxNumberOfConnectedPublicPeers value
cannot exceed the nxt.maxNumberOfOutboundConnections value (if it does, it is
set to nxt.maxNumberOfOutboundConnections).

The getAccountTransactions and getAccountTransactionIds APIs have been
restricted to always return only the non-phased transactions. Those APIs have
also been deprecated and will be removed in 1.6. The getBlockchainTransactions
API should be used instead, which has the same behavior but returns both phased
and non-phased transactions (by default, unless either phasedOnly or
nonPhasedOnly parameters is specified).
Do not simply replace getAccountTransactions with getBlockchainTransactions in
your client code without an understanding of how phased transactions work and
without being prepared to handle them correctly.

Added links to the Wiki documentation for each API request from the /test page.
The links are autogenerated and thus work only for the wiki sections following
the same hash tag pattern, but most of them currently do.

The JavaScript NRS.sendRequest() function no longer accepts a callback function
as its second parameter. Instead, when sending a request with no data, specify
the value {} as the second parameter and the callback function as the third
parameter.

Client UI improvements:

Implemented client side signing of the tagged data transactions.

Added File Upload form, accessible from the settings menu. Allow extending a
tagged data transaction from the transaction info modal.

Integration of current status of client translations for new 1.5 features,
new "experimental" state for languages with translation status at 40-50%+,
added Czech, Greek, Hindi translations in experimental state, updated translation
state for other languages (Beta: 70-80%+, Stable: 90-95%+).

